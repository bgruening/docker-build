---

- hosts: localhost
  remote_user: root
  vars:
    work_dir: /build
    py27_version: 2.7.13
    py27_sha256: 0843c59d394c64f24a5f9c342c7f41f8ae4e3adc65e32f24cc6f4a07cf55741a
    virtualenv_version: 15.1.0
    virtualenv_url: https://pypi.python.org/packages/d4/0c/9840c08189e030873387a73b90ada981885010dd9aea134d6de30cd24cb8/virtualenv-15.1.0.tar.gz
    virtualenv_sha256: 02f8102c2436bb03b3ee6dede1919d1dac8a427541652e5ec95171ec8adbc93a
    user_public_key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCruS3Vk9D5u0lHSEwjO5g0WefvGzP/F0O9LhywRepFUxeZ9WKNiay+S/xi0y/1neJV+zEmy0/6SLGpT5L20ZgzpVMR5iFnJV+q0JENrhJ4uq/pedVkWCW1nA9HgAVqyBn94WXwuZGEovIK+XmeNXMdlPO7jerjUTLGCiefiCnCQqseJqjjEpqTRpAkl5YEZulZzfoBryzaHlzudryhkiRlJbmzuvhd75exbM25YHgs9lT+s+tRrS0UqEejNkz9P+W3HD4ICzc2zlu6O1mtdaReUlkass11ECYCOwMJTmRE1cy+j0SAbhhQLlLIgLbP/8DEiOi2vymdoH96R8BU9TKx user@mjolnir0
  tasks:

  # TODO: These tasks were performed by hand:
  # - Install OS X
  # - Install Xcode
  # - Copy the 10.6 SDK to /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
  # - Run gcc once to accept the Xcode license
  # - As of 2017-11-27 (possibly due to a brew version upgrade) it was necessary to run `xcode-select --install` on the
  #   old image that had had the previous steps performed a couple years ago. If done from scratch this might not be
  #   necessary.

  - name: Enable user environment via ssh
    lineinfile:
      dest: "/etc/sshd_config"
      line: "PermitUserEnvironment yes"
      regexp: "^PermitUserEnvironment "

  - name: Allow ssh with public key
    authorized_key:
      key: "{{ user_public_key }}"
      user:  "{{ item }}"
    with_items:
      - root
      - admin

  - name: Create /Developer symlink
    file:
      src: /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer
      dest: /Developer
      state: link

  - name: Create work_dir
    file:
      path: "{{ work_dir }}"
      state: directory

  - name: Fetch Python 2.7 installer
    get_url:
      url: https://www.python.org/ftp/python/{{ py27_version }}/python-{{ py27_version }}-macosx10.6.pkg
      sha256sum: "{{ py27_sha256 }}"
      dest: "{{ work_dir }}/python-{{ py27_version }}-macosx10.6.pkg"

  - name: Install Python 2.7
    command: installer -pkg {{ work_dir }}/python-{{ py27_version }}-macosx10.6.pkg -target /
    args:
      creates: "/Library/Frameworks/Python.framework/Versions/2.7/bin/python2.7"

  # Explicitly naming these makes it idempotent
  - name: Remove /usr/local symlinks
    file:
      path: /usr/local/bin/{{ item }}
      state: absent
    with_items:
      - 2to3
      - 2to3-2
      - 2to3-2.7
      - easy_install
      - easy_install-2.7
      - idle
      - idle2
      - idle2.7
      - pip
      - pip2
      - pip2.7
      - pydoc
      - pydoc2
      - pydoc2.7
      - python
      - python-32
      - python-config
      - python2
      - python2-32
      - python2-config
      - python2.7
      - python2.7-32
      - python2.7-config
      - pythonw
      - pythonw-32
      - pythonw2
      - pythonw2-32
      - pythonw2.7
      - pythonw2.7-32
      - smtpd.py
      - smtpd2.py
      - smtpd2.7.py

  - name: Create /python
    file:
      path: /python
      state: directory

  - name: Create /python symlinks
    file: 
      src: /Library/Frameworks/Python.framework/Versions/{{ item }}
      dest: /python/cp{{ item | replace('.', '') }}m-x86_64
      state: link
    with_items:
      - 2.7

  - name: Copy Starforge
    copy:
      src: starforge.tar.gz
      dest: "{{ work_dir }}/starforge.tar.gz"

  - name: Fetch virtualenv
    get_url:
      url: "{{ virtualenv_url }}"
      sha256sum: "{{ virtualenv_sha256 }}"
      dest: "{{ work_dir }}/virtualenv-{{ virtualenv_version }}.tar.gz"

  # Apparently unarchive now requires GNU tar
  - name: Untar virtualenv
    #unarchive:
    #  src: "{{ work_dir }}/virtualenv-{{ virtualenv_version }}.tar.gz"
    #  dest: "{{ work_dir }}"
    command: tar zxf virtualenv-{{ virtualenv_version }}.tar.gz
    args:
      chdir: "{{ work_dir }}"
      creates: "{{ work_dir }}/virtualenv-{{ virtualenv_version }}"
    #  copy: no

  - name: Create wheelenv
    pip:
      name: "{{ item }}"
      state: latest
      virtualenv: /python/wheelenv
      virtualenv_command: /Library/Frameworks/Python.framework/Versions/2.7/bin/python {{ work_dir }}/virtualenv-{{ virtualenv_version }}/virtualenv.py
    with_items:
      - pip
      - setuptools
      - delocate

  - name: Create delocate symlinks
    file:
      src: "/python/wheelenv/bin/{{ item }}"
      dest: "/usr/bin/{{ item }}"
      state: link
    with_items:
      - delocate-addplat
      - delocate-fuse
      - delocate-listdeps
      - delocate-patch
      - delocate-path
      - delocate-wheel

  - name: Allow admin(s) to sudo without a password
    lineinfile:
      dest: /etc/sudoers
      regexp: "^%admin"
      line: "%admin  ALL=(ALL) NOPASSWD: ALL"

  - name: Install Homebrew
    remote_user: admin
    shell: ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" </dev/null
    args:
      creates: /usr/local/bin/brew

  - name: Install Homebrew packages
    remote_user: admin
    homebrew:
      name: "{{ item }}"
    with_items:
      - xz

  # Curl is used here because get_url on bootstrap.pypa.io fails because that Python's ssl is too old to support TLS > 1.0
  - name: Fetch get-pip
    #get_url:
    #  url: https://bootstrap.pypa.io/get-pip.py
    #  dest: "{{ work_dir }}/get-pip.py"
    command: curl -O https://bootstrap.pypa.io/get-pip.py
    args:
      chdir: "{{ work_dir }}"
      creates: "{{ work_dir }}/get-pip.py"

  - name: Run get-pip
    command: /python/cp{{ item | replace('.', '') }}m-x86_64/bin/python {{ work_dir }}/get-pip.py
    args:
      creates: /python/cp{{ item | replace('.', '') }}m-x86_64/bin/pip
    with_items:
      - 2.7

  - name: Install Starforge
    command: /python/{{ item }}/bin/pip install {{ work_dir }}/starforge.tar.gz[lzma]
    args:
      creates: /python/{{ item }}/bin/starforge
    with_items:
      - wheelenv
      - cp27m-x86_64
